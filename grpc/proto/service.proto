syntax = "proto3";

// protoc --proto_path=grpc --go_out=. grpc/proto/service.proto
// protoc --proto_path=grpc --go-grpc_out=. grpc/proto/service.proto

package proto;

option go_package = "/grpc";

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum Status {
    UNKNOWN = 0;
    SERVING_NOT_CONNECTED = 1;
    SERVING_CONNECTED = 2;
    NOT_SERVING = 3;
  }
  Status status = 1;
}

message Message {
  string ServiceName = 1;
  string message = 2;
}

message ServeResponse {
  bool ok = 1;
}

service ServiceCommunicator {
  rpc SendRandStringStream(stream Message) returns (stream Message) {}
  rpc SendRandString(Message) returns (Message) {}
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
  rpc Connected(HealthCheckRequest) returns (ServeResponse);
  rpc Disconnected(HealthCheckRequest) returns (ServeResponse);
}